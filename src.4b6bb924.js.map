{"version":3,"sources":["src/index.js"],"names":["onClickAdd","inputText","document","getElementById","value","createIncompleteList","addEventListener","deleteFromIncompleteList","target","removeChild","text","div","createElement","className","li","innerText","completeButton","parentNode","addTarget","firstElementChild","textContent","backButton","deleteTarget","console","log","appendChild","deleteButton"],"mappings":";;;AAyFC,aAzFD,QAAA,gBAEA,IAAMA,EAAa,WAGjB,IAAMC,EAAYC,SAASC,eAAe,YAAYC,MACtDF,SAASC,eAAe,YAAYC,MAAQ,GAC5CC,EAAqBJ,IAGvBC,SACGC,eAAe,cACfG,iBAAiB,QAAS,WAAA,OAAMN,MAGnC,IAAMO,EAA2B,SAACC,GAChCN,SAASC,eAAe,mBAAmBM,YAAYD,IAInDH,EAAuB,SAAvBA,EAAwBK,GAE5B,IAAMC,EAAMT,SAASU,cAAc,OACnCD,EAAIE,UAAY,WAEhB,IAAMC,EAAKZ,SAASU,cAAc,MAClCE,EAAGC,UAAYL,EAIf,IAAMM,EAAiBd,SAASU,cAAc,UAC9CI,EAAeD,UAAY,WAC3BC,EAAeV,iBAAiB,QAAS,WACvCC,EAAyBS,EAAeC,YAGxC,IAAMC,EAAYF,EAAeC,WAE3BP,EAAOQ,EAAUC,kBAAkBJ,UAEzCG,EAAUE,YAAc,KAExB,IAAMN,EAAKZ,SAASU,cAAc,MAClCE,EAAGC,UAAYL,EAEf,IAAMW,EAAanB,SAASU,cAAc,UAC1CS,EAAWN,UAAY,OACvBM,EAAWf,iBAAiB,QAAS,WAEnC,IAAMgB,EAAeD,EAAWJ,WAChCf,SAASC,eAAe,iBAAiBM,YAAYa,GAErD,IAAMZ,EAAOW,EAAWJ,WAAWE,kBAAkBJ,UACrDQ,QAAQC,IAAId,GACZL,EAAqBK,KAGvBQ,EAAUO,YAAYX,GACtBI,EAAUO,YAAYJ,GACtBE,QAAQC,IAAIN,GAGZhB,SAASC,eAAe,iBAAiBsB,YAAYP,KAOvD,IAAMQ,EAAexB,SAASU,cAAc,UAC5Cc,EAAaX,UAAY,SACzBW,EAAapB,iBAAiB,QAAS,WAGrCC,EAAyBmB,EAAaT,cAOxCN,EAAIc,YAAYX,GAChBH,EAAIc,YAAYT,GAChBL,EAAIc,YAAYC,GAIhBxB,SAASC,eAAe,mBAAmBsB,YAAYd","file":"src.4b6bb924.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\nconst onClickAdd = () => {\n  //gettting the value in teh text box\n  //ここで得た値をliタグのitsTodoへ入れる\n  const inputText = document.getElementById(\"add-text\").value; //入力された値を取得\n  document.getElementById(\"add-text\").value = \"\"; //inputテキストの内容を空に\n  createIncompleteList(inputText);\n};\n\ndocument\n  .getElementById(\"add-button\")\n  .addEventListener(\"click\", () => onClickAdd()); //add-bittonがクリックされたとき関数onclickAddを実行\n\n//Incompleteリストから指定の要素を削除\nconst deleteFromIncompleteList = (target) => {\n  document.getElementById(\"incomplete-list\").removeChild(target);\n};\n\n//Incompleteリストに追加する関数\nconst createIncompleteList = (text) => {\n  //div tag生成\n  const div = document.createElement(\"div\");\n  div.className = \"list-row\"; //class付与\n  //li tag 生成\n  const li = document.createElement(\"li\"); //li tag 生成\n  li.innerText = text; //liの中にinputの内容が取得される\n  //console.log(li);\n\n  //button(complete)タグ生成\n  const completeButton = document.createElement(\"button\"); //<button>要素作成\n  completeButton.innerText = \"Complete\"; //<button>の間にCompleteテキスト挿入\n  completeButton.addEventListener(\"click\", () => {\n    deleteFromIncompleteList(completeButton.parentNode);\n    //complete listに追加する要素\n    //Completeボタンの親要素取得\n    const addTarget = completeButton.parentNode;\n    //divの子要素の一番上取得\n    const text = addTarget.firstElementChild.innerText;\n    //div以下を初期化\n    addTarget.textContent = null;\n    //li tag 生成\n    const li = document.createElement(\"li\");\n    li.innerText = text;\n    //button tag 生成\n    const backButton = document.createElement(\"button\");\n    backButton.innerText = \"back\";\n    backButton.addEventListener(\"click\", () => {\n      //押されたBackボタンの親タグ(div)を完了リスとから削除。\n      const deleteTarget = backButton.parentNode; //backbuttonのdiv要素取得\n      document.getElementById(\"complete-list\").removeChild(deleteTarget);\n      //テキスト取得 押された戻すボタンのdivタグ要素の最初の要素のliタグ内にあるテキストを取得\n      const text = backButton.parentNode.firstElementChild.innerText;\n      console.log(text);\n      createIncompleteList(text);\n    });\n    //div tagの子要素に各要素を追加\n    addTarget.appendChild(li);\n    addTarget.appendChild(backButton);\n    console.log(addTarget);\n\n    //Completelistに追加\n    document.getElementById(\"complete-list\").appendChild(addTarget);\n    // const deleteTarget = completeButton.parentNode; //削除ボタンの親タグ(div)を取得\n    // document.getElementById(\"incomplete-list\").removeChild(deleteTarget);\n  });\n  //console.log(completeButton);\n\n  //button(delete)タグ生成\n  const deleteButton = document.createElement(\"button\"); //<button>要素作成\n  deleteButton.innerText = \"Delete\"; //<button>の間にCompleteテキスト挿入\n  deleteButton.addEventListener(\"click\", () => {\n    //alert(\"delete\");\n    //押された削除ボタンの親タグ(div)を未完了リストから削除\n    deleteFromIncompleteList(deleteButton.parentNode);\n    // const deleteTarget = deleteButton.parentNode; //削除ボタンの親タグ(div)を取得\n    // document.getElementById(\"incomplete-list\").removeChild(deleteTarget);\n    // //incomplete-listにあるdeleteTargetで得た要素を削除\n  });\n\n  //div tagの子要素に各要素を設定\n  div.appendChild(li); //liタグの内容をdivの子要素として挿入\n  div.appendChild(completeButton);\n  div.appendChild(deleteButton);\n  //console.log(div);\n\n  //未完了リストに追加\n  document.getElementById(\"incomplete-list\").appendChild(div);\n  //incomplete-listのところにdivの内容を挿入\n};\n"]}